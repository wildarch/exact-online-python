# coding: utf-8

"""
    Exact Online Rest API

    Interact with Exact Online database

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class Item(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, code=None, cost_price_standard=None, description=None, end_date=None, is_batch_item=None, is_make_item=None, is_on_demand_item=None, is_package_item=None, is_purchase_item=None, is_sales_item=None, is_serial_item=None, is_stock_item=None, is_webshop_item=None, item_group=None, item_group_code=None, item_group_description=None, notes=None, search_code=None, start_date=None, unit=None, unit_description=None):
        """
        Item - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'code': 'str',
            'cost_price_standard': 'float',
            'description': 'str',
            'end_date': 'str',
            'is_batch_item': 'str',
            'is_make_item': 'str',
            'is_on_demand_item': 'str',
            'is_package_item': 'bool',
            'is_purchase_item': 'bool',
            'is_sales_item': 'bool',
            'is_serial_item': 'bool',
            'is_stock_item': 'bool',
            'is_webshop_item': 'str',
            'item_group': 'str',
            'item_group_code': 'str',
            'item_group_description': 'str',
            'notes': 'str',
            'search_code': 'str',
            'start_date': 'str',
            'unit': 'str',
            'unit_description': 'str'
        }

        self.attribute_map = {
            'id': 'ID',
            'code': 'Code',
            'cost_price_standard': 'CostPriceStandard',
            'description': 'Description',
            'end_date': 'EndDate',
            'is_batch_item': 'IsBatchItem',
            'is_make_item': 'IsMakeItem',
            'is_on_demand_item': 'IsOnDemandItem',
            'is_package_item': 'IsPackageItem',
            'is_purchase_item': 'IsPurchaseItem',
            'is_sales_item': 'IsSalesItem',
            'is_serial_item': 'IsSerialItem',
            'is_stock_item': 'IsStockItem',
            'is_webshop_item': 'IsWebshopItem',
            'item_group': 'ItemGroup',
            'item_group_code': 'ItemGroupCode',
            'item_group_description': 'ItemGroupDescription',
            'notes': 'Notes',
            'search_code': 'SearchCode',
            'start_date': 'StartDate',
            'unit': 'Unit',
            'unit_description': 'UnitDescription'
        }

        self._id = id
        self._code = code
        self._cost_price_standard = cost_price_standard
        self._description = description
        self._end_date = end_date
        self._is_batch_item = is_batch_item
        self._is_make_item = is_make_item
        self._is_on_demand_item = is_on_demand_item
        self._is_package_item = is_package_item
        self._is_purchase_item = is_purchase_item
        self._is_sales_item = is_sales_item
        self._is_serial_item = is_serial_item
        self._is_stock_item = is_stock_item
        self._is_webshop_item = is_webshop_item
        self._item_group = item_group
        self._item_group_code = item_group_code
        self._item_group_description = item_group_description
        self._notes = notes
        self._search_code = search_code
        self._start_date = start_date
        self._unit = unit
        self._unit_description = unit_description

    @property
    def id(self):
        """
        Gets the id of this Item.


        :return: The id of this Item.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this Item.


        :param id: The id of this Item.
        :type: str
        """

        self._id = id

    @property
    def code(self):
        """
        Gets the code of this Item.


        :return: The code of this Item.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """
        Sets the code of this Item.


        :param code: The code of this Item.
        :type: str
        """

        self._code = code

    @property
    def cost_price_standard(self):
        """
        Gets the cost_price_standard of this Item.


        :return: The cost_price_standard of this Item.
        :rtype: float
        """
        return self._cost_price_standard

    @cost_price_standard.setter
    def cost_price_standard(self, cost_price_standard):
        """
        Sets the cost_price_standard of this Item.


        :param cost_price_standard: The cost_price_standard of this Item.
        :type: float
        """

        self._cost_price_standard = cost_price_standard

    @property
    def description(self):
        """
        Gets the description of this Item.


        :return: The description of this Item.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this Item.


        :param description: The description of this Item.
        :type: str
        """

        self._description = description

    @property
    def end_date(self):
        """
        Gets the end_date of this Item.


        :return: The end_date of this Item.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """
        Sets the end_date of this Item.


        :param end_date: The end_date of this Item.
        :type: str
        """

        self._end_date = end_date

    @property
    def is_batch_item(self):
        """
        Gets the is_batch_item of this Item.


        :return: The is_batch_item of this Item.
        :rtype: str
        """
        return self._is_batch_item

    @is_batch_item.setter
    def is_batch_item(self, is_batch_item):
        """
        Sets the is_batch_item of this Item.


        :param is_batch_item: The is_batch_item of this Item.
        :type: str
        """

        self._is_batch_item = is_batch_item

    @property
    def is_make_item(self):
        """
        Gets the is_make_item of this Item.


        :return: The is_make_item of this Item.
        :rtype: str
        """
        return self._is_make_item

    @is_make_item.setter
    def is_make_item(self, is_make_item):
        """
        Sets the is_make_item of this Item.


        :param is_make_item: The is_make_item of this Item.
        :type: str
        """

        self._is_make_item = is_make_item

    @property
    def is_on_demand_item(self):
        """
        Gets the is_on_demand_item of this Item.


        :return: The is_on_demand_item of this Item.
        :rtype: str
        """
        return self._is_on_demand_item

    @is_on_demand_item.setter
    def is_on_demand_item(self, is_on_demand_item):
        """
        Sets the is_on_demand_item of this Item.


        :param is_on_demand_item: The is_on_demand_item of this Item.
        :type: str
        """

        self._is_on_demand_item = is_on_demand_item

    @property
    def is_package_item(self):
        """
        Gets the is_package_item of this Item.


        :return: The is_package_item of this Item.
        :rtype: bool
        """
        return self._is_package_item

    @is_package_item.setter
    def is_package_item(self, is_package_item):
        """
        Sets the is_package_item of this Item.


        :param is_package_item: The is_package_item of this Item.
        :type: bool
        """

        self._is_package_item = is_package_item

    @property
    def is_purchase_item(self):
        """
        Gets the is_purchase_item of this Item.


        :return: The is_purchase_item of this Item.
        :rtype: bool
        """
        return self._is_purchase_item

    @is_purchase_item.setter
    def is_purchase_item(self, is_purchase_item):
        """
        Sets the is_purchase_item of this Item.


        :param is_purchase_item: The is_purchase_item of this Item.
        :type: bool
        """

        self._is_purchase_item = is_purchase_item

    @property
    def is_sales_item(self):
        """
        Gets the is_sales_item of this Item.


        :return: The is_sales_item of this Item.
        :rtype: bool
        """
        return self._is_sales_item

    @is_sales_item.setter
    def is_sales_item(self, is_sales_item):
        """
        Sets the is_sales_item of this Item.


        :param is_sales_item: The is_sales_item of this Item.
        :type: bool
        """

        self._is_sales_item = is_sales_item

    @property
    def is_serial_item(self):
        """
        Gets the is_serial_item of this Item.


        :return: The is_serial_item of this Item.
        :rtype: bool
        """
        return self._is_serial_item

    @is_serial_item.setter
    def is_serial_item(self, is_serial_item):
        """
        Sets the is_serial_item of this Item.


        :param is_serial_item: The is_serial_item of this Item.
        :type: bool
        """

        self._is_serial_item = is_serial_item

    @property
    def is_stock_item(self):
        """
        Gets the is_stock_item of this Item.


        :return: The is_stock_item of this Item.
        :rtype: bool
        """
        return self._is_stock_item

    @is_stock_item.setter
    def is_stock_item(self, is_stock_item):
        """
        Sets the is_stock_item of this Item.


        :param is_stock_item: The is_stock_item of this Item.
        :type: bool
        """

        self._is_stock_item = is_stock_item

    @property
    def is_webshop_item(self):
        """
        Gets the is_webshop_item of this Item.


        :return: The is_webshop_item of this Item.
        :rtype: str
        """
        return self._is_webshop_item

    @is_webshop_item.setter
    def is_webshop_item(self, is_webshop_item):
        """
        Sets the is_webshop_item of this Item.


        :param is_webshop_item: The is_webshop_item of this Item.
        :type: str
        """

        self._is_webshop_item = is_webshop_item

    @property
    def item_group(self):
        """
        Gets the item_group of this Item.


        :return: The item_group of this Item.
        :rtype: str
        """
        return self._item_group

    @item_group.setter
    def item_group(self, item_group):
        """
        Sets the item_group of this Item.


        :param item_group: The item_group of this Item.
        :type: str
        """

        self._item_group = item_group

    @property
    def item_group_code(self):
        """
        Gets the item_group_code of this Item.


        :return: The item_group_code of this Item.
        :rtype: str
        """
        return self._item_group_code

    @item_group_code.setter
    def item_group_code(self, item_group_code):
        """
        Sets the item_group_code of this Item.


        :param item_group_code: The item_group_code of this Item.
        :type: str
        """

        self._item_group_code = item_group_code

    @property
    def item_group_description(self):
        """
        Gets the item_group_description of this Item.


        :return: The item_group_description of this Item.
        :rtype: str
        """
        return self._item_group_description

    @item_group_description.setter
    def item_group_description(self, item_group_description):
        """
        Sets the item_group_description of this Item.


        :param item_group_description: The item_group_description of this Item.
        :type: str
        """

        self._item_group_description = item_group_description

    @property
    def notes(self):
        """
        Gets the notes of this Item.


        :return: The notes of this Item.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """
        Sets the notes of this Item.


        :param notes: The notes of this Item.
        :type: str
        """

        self._notes = notes

    @property
    def search_code(self):
        """
        Gets the search_code of this Item.


        :return: The search_code of this Item.
        :rtype: str
        """
        return self._search_code

    @search_code.setter
    def search_code(self, search_code):
        """
        Sets the search_code of this Item.


        :param search_code: The search_code of this Item.
        :type: str
        """

        self._search_code = search_code

    @property
    def start_date(self):
        """
        Gets the start_date of this Item.


        :return: The start_date of this Item.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """
        Sets the start_date of this Item.


        :param start_date: The start_date of this Item.
        :type: str
        """

        self._start_date = start_date

    @property
    def unit(self):
        """
        Gets the unit of this Item.


        :return: The unit of this Item.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """
        Sets the unit of this Item.


        :param unit: The unit of this Item.
        :type: str
        """

        self._unit = unit

    @property
    def unit_description(self):
        """
        Gets the unit_description of this Item.


        :return: The unit_description of this Item.
        :rtype: str
        """
        return self._unit_description

    @unit_description.setter
    def unit_description(self, unit_description):
        """
        Sets the unit_description of this Item.


        :param unit_description: The unit_description of this Item.
        :type: str
        """

        self._unit_description = unit_description

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
